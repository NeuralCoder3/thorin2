// RUN: rm -f %t.ll ; \
// RUN: timeout 60 %thorin -d clos -d direct -d autodiff -d affine %s --output-ll %t.ll --output-thorin -
// clos, direct, autodiff,  affine, mem, core

.import core;
.import autodiff;
.import mem;

.let _32 = 4294967296;
.let I32 = .Idx _32;

/// if b<=0:
///     1
/// else
///     a*pow(a,b-1)
/// 
/// pow(a,b,ret): 
///     ((pow_else,pow_then)#cmp) ()
/// then():
///    ret 1
/// else():
///     pow(a,b-1,cont)
/// cont(v):
///    ret (a*v)
/// 
.con f [[a:I32, b:I32], ret: .Cn [I32]] = {
    .con pow_then [] = ret (1:I32);

    .con pow_cont [v:I32] = {
        .let m = %core.wrap.mul _32 0 (a,v);
        ret m
    };
    .con pow_else [] = {
        .let b_1 = %core.wrap.sub _32 0 (b,1:I32);
        f ((a,b_1),pow_cont)
    };
    // .let cmp = %core.icmp.sle _32 (b,0:I32);
    .let cmp = %core.icmp.e _32 (b,0:I32);
    ((pow_else, pow_then)#cmp) ()
};

.con .extern main [mem : %mem.M, argc : I32, argv : %mem.Ptr (%mem.Ptr (.Idx 256, 0:.Nat), 0:.Nat), return : .Cn [%mem.M, I32]] = {
    .con ret_cont [a:I32] = {
        return (mem, a)
    };

    .let c = (4:I32,3:I32);
    f (c,ret_cont)

};

.lam .extern _compile [] -> Pipeline = {
    ad_full_pipeline
};

// f_reshape_2734622 (_2734736, 3:(.Idx 4294967296), ret_cont_reshape_2734744)
