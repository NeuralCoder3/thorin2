.import compile;
.import core;
.import clos;
.import mem;
.con zero_pb_1710637 _1710638::[.Idx 4294967296, _1710640: .Cn «2; .Idx 4294967296»] @(1:(.Idx 2)) = {
    _1710640 ‹2; 0:(.Idx 4294967296)›
};
.con tup_pb_1710668 [_1710669: .Cn «2; .Idx 4294967296»] @(1:(.Idx 2)) = {
    _1710669 ‹2; 0:(.Idx 4294967296)›
};
.con tup_pb_1710667 [_1710671: .Cn «2; .Idx 4294967296»] @(1:(.Idx 2)) = {
    tup_pb_1710668 _1710671
};
.con tup_pb_1710666 _1710673::[[], _1710675: .Cn «2; .Idx 4294967296»] @(1:(.Idx 2)) = {
    tup_pb_1710667 _1710675
};
.con aug_f_1710434 _1710471::[_1710473: .Idx 4294967296, _1710485: .Cn [.Idx 4294967296, .Cn [.Idx 4294967296, .Cn «2; .Idx 4294967296»]], _1710612: .Cn [.Idx 4294967296, .Cn .Idx 4294967296, .Cn «2; .Idx 4294967296»]] @(0:(.Idx 2)) = {
    .con aug_pow_cont_1710483 _1710505::[_1710507: .Idx 4294967296, _1710525: .Cn [.Idx 4294967296, .Cn «2; .Idx 4294967296»]] @(0:(.Idx 2)) = {
        .con comp_tup_pb__1710517 _1710530::[_1710532: .Idx 4294967296, _1710548: .Cn «2; .Idx 4294967296»] @(1:(.Idx 2)) = {
            .con tup_pb_cont_cont_1710546 _1710589::[_1710590: .Idx 4294967296, _1710596: .Idx 4294967296] @(1:(.Idx 2)) = {
                .let _1710588: .Idx 4294967296 = %core.wrap.mul 4294967296 0 (_1710507, _1710532);
                .let _1710595: .Idx 4294967296 = %core.wrap.add 4294967296 0 (_1710588, _1710590);
                _1710548 (_1710595, _1710596)
            };
            .let _1710539: .Idx 4294967296 = %core.wrap.mul 4294967296 0 (4:(.Idx 4294967296), _1710532);
            _1710525 (_1710539, tup_pb_cont_cont_1710546)
        };
        .let _1710514: .Idx 4294967296 = %core.wrap.mul 4294967296 0 (4:(.Idx 4294967296), _1710507);
        _1710485 (_1710514, comp_tup_pb__1710517)
    };
    .con _1710610 [_1710613: [.Idx 4294967296, .Cn .Idx 4294967296, .Cn «2; .Idx 4294967296»]] @(1:(.Idx 2)) = {
        _1710612 _1710613
    };
    .con tup_pb_1710609 _1710615::[_1710617: .Idx 4294967296, .Cn .Idx 4294967296, _1710620: .Cn «2; .Idx 4294967296»] @(1:(.Idx 2)) = {
        _1710610 (_1710617, ⊥:.Cn .Idx 4294967296, _1710620)
    };
    .con aug_pow_else_1710451 [ .Cn [[],.Cn «2; .Idx 4294967296»]] @(0:(.Idx 2)) = {
        .let _1710480: .Idx 4294967296 = %core.wrap.add 4294967296 0 (4294967295:(.Idx 4294967296), _1710473);
        aug_f_1710434 (_1710480, aug_pow_cont_1710483, tup_pb_1710609)
    };
    .con aug_pow_then_1710627 [ .Cn [[],.Cn «2; .Idx 4294967296»]] @(0:(.Idx 2)) = {
        _1710485 (1:(.Idx 4294967296), zero_pb_1710637)
    };
    .let _1710664: .Idx 2 = %core.icmp.xyglE 4294967296 (0:(.Idx 4294967296), _1710473);
    (aug_pow_else_1710451, aug_pow_then_1710627)#_1710664 tup_pb_1710666
};
.con tup_pb_1710809 _1710810::[_1710816: .Idx 4294967296, .Cn .Idx 4294967296, _1710812: .Cn «2; .Idx 4294967296»] @(1:(.Idx 2)) = {
    _1710812 (0:(.Idx 4294967296), _1710816)
};
.con .extern main __1710693::[mem_1710714: %mem.M, .Idx 4294967296, %mem.Ptr (%mem.Ptr (.Idx 256, 0), 0), return_1710697: .Cn [%mem.M, .Idx 4294967296]] @(0:(.Idx 2)) = {
    .con aug_pow_cont_1710679 _1710680::[_1710743: .Idx 4294967296, _1710682: .Cn [.Idx 4294967296, .Cn «2; .Idx 4294967296»]] @(0:(.Idx 2)) = {
        .con tup_pb_cont_cont_1710683 _1710761::[_1710775: .Idx 4294967296, _1710762: .Idx 4294967296] @(1:(.Idx 2)) = {
            .let _1710750: .Idx 4294967296 = %core.wrap.mul 4294967296 0 (4:(.Idx 4294967296), _1710743);
            .let _1710757: .Idx 4294967296 = %core.wrap.mul 4294967296 0 (10000:(.Idx 4294967296), _1710750);
            .let _1710787: .Idx 4294967296 = %core.wrap.add 4294967296 0 (_1710743, _1710775);
            .let _1710794: .Idx 4294967296 = %core.wrap.mul 4294967296 0 (100:(.Idx 4294967296), _1710787);
            .let _1710799: .Idx 4294967296 = %core.wrap.add 4294967296 0 (_1710762, _1710794);
            .let _1710804: .Idx 4294967296 = %core.wrap.add 4294967296 0 (_1710757, _1710799);
            return_1710697 (mem_1710714, _1710804)
        };
        _1710682 (4:(.Idx 4294967296), tup_pb_cont_cont_1710683)
    };
    aug_f_1710434 (2:(.Idx 4294967296), aug_pow_cont_1710679, tup_pb_1710809)
};
.lam .extern _compile [] -> Pipeline = {
    %compile.pipe
        (%compile.single_pass_phase (%mem.reshape_pass %mem.reshape_flat))
        // clos_phases
};
