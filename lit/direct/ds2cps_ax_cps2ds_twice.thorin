// RUN: rm -f %t.ll ; \
// RUN: %thorin -d direct %s --output-ll %t.ll -o - | FileCheck %s

.import direct;
.import mem;
.import core;

.let _32 = 4294967296;
.let I32 = .Idx _32;

.con f ![a:I32, return: .Cn I32] = {
    .let b = %core.wrap.add _32 0 (2:I32, a);
    return b
};


.con .extern main [mem : %mem.M, argc : I32, argv : %mem.Ptr (%mem.Ptr (.Idx 256, 0), 0), return : .Cn [%mem.M, I32]] = {
    .let g = %direct.cps2ds (I32,I32) f;
    .let c1 = g (38:I32);
    .let h = %direct.cps2ds (I32,I32) f;
    .let c2 = h (c1);
    return (mem, c2)
};

// CHECK-DAG: return{{.*}}42

// .lam .extern _compile [] -> Pipeline = {
//     .let nullptr = %compile.nullptr_pass;
//     .let nullphase = %compile.single_pass_phase nullptr;
//     %compile.pipe
//         nullphase
//         (%compile.single_pass_phase %compile.internal_cleanup_pass)
//         (%compile.single_pass_phase (%compile.scalerize_pass nullptr))
//         (%compile.single_pass_phase %compile.eta_red_pass)
//         (%compile.single_pass_phase (%compile.tail_rec_elim_pass nullptr))
//         // optimize
//         // (%compile.single_pass_phase %compile.eta_red_pass)
//         // (%compile.pass_phase 
//         //   (%compile.combine_pass_list (⊤:.Nat)
//         //   (
//         //     optimization_pass_list,
//         //     mem_opt_pass_list
//         //   ))
//         // )
//           optimization_phase
//         // (
//         //   %compile.combined_phase (%compile.phase_list
//         //   direct_phases
//         //   optimization_phase
//         //   )
//         // )
//         // (%compile.single_pass_phase %compile.internal_cleanup_pass)
//         // (%compile.single_pass_phase %compile.lam_spec_pass)
//         // // CodeGenPrep
//         // (%compile.pass_phase 
//         //   (%compile.combine_pass_list (⊤:.Nat)
//         //   (
//         //     %compile.pass_list
//         //       %compile.ret_wrap_pass,
//         //     // mem
//         //     %compile.pass_list
//         //       %mem.remem_elim_pass
//         //       %mem.alloc2malloc_pass,
//         //   ))
//         // )
// };
